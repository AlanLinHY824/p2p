<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.powernode.p2p.mapper.BBidInfoMapper" >
  <resultMap id="BaseResultMap" type="com.powernode.p2p.model.BBidInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="loan_id" property="loanId" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="bid_money" property="bidMoney" jdbcType="DOUBLE" />
    <result column="bid_time" property="bidTime" jdbcType="TIMESTAMP" />
    <result column="bid_status" property="bidStatus" jdbcType="INTEGER" />
  </resultMap>

  <resultMap id="BaseResultMap2" type="com.powernode.p2p.vo.BBidInfoVo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="loan_id" property="loanId" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="bid_money" property="bidMoney" jdbcType="DOUBLE" />
    <result column="bid_time" property="bidTime" jdbcType="TIMESTAMP" />
    <result column="bid_status" property="bidStatus" jdbcType="INTEGER" />
    <association property="user" javaType="com.powernode.p2p.model.UUser">
      <id column="uid" property="id" jdbcType="INTEGER"/>
      <result column="phone" property="phone" jdbcType="VARCHAR" />
      <result column="login_password" property="loginPassword" jdbcType="VARCHAR" />
      <result column="name" property="name" jdbcType="VARCHAR" />
      <result column="id_card" property="idCard" jdbcType="VARCHAR" />
      <result column="add_time" property="addTime" jdbcType="TIMESTAMP" />
      <result column="last_login_time" property="lastLoginTime" jdbcType="TIMESTAMP" />
      <result column="header_image" property="headerImage" jdbcType="VARCHAR" />
    </association>
  </resultMap>

  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, loan_id, uid, bid_money, bid_time, bid_status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.powernode.p2p.model.BBidInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from b_bid_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from b_bid_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from b_bid_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.powernode.p2p.model.BBidInfoExample" >
    delete from b_bid_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.powernode.p2p.model.BBidInfo" >
    insert into b_bid_info (id, loan_id, uid, 
      bid_money, bid_time, bid_status
      )
    values (#{id,jdbcType=INTEGER}, #{loanId,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, 
      #{bidMoney,jdbcType=DOUBLE}, #{bidTime,jdbcType=TIMESTAMP}, #{bidStatus,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.powernode.p2p.model.BBidInfo" >
    insert into b_bid_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="loanId != null" >
        loan_id,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="bidMoney != null" >
        bid_money,
      </if>
      <if test="bidTime != null" >
        bid_time,
      </if>
      <if test="bidStatus != null" >
        bid_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="loanId != null" >
        #{loanId,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="bidMoney != null" >
        #{bidMoney,jdbcType=DOUBLE},
      </if>
      <if test="bidTime != null" >
        #{bidTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bidStatus != null" >
        #{bidStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.powernode.p2p.model.BBidInfoExample" resultType="java.lang.Integer" >
    select count(*) from b_bid_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
    <select id="selectTotalDealAmount" resultType="java.lang.Double">
      select sum(bid_money) from b_bid_info;
    </select>
    <select id="selectBidByLoanId" resultMap="BaseResultMap2">
      select * from b_bid_info b,u_user u where b.loan_id=#{loanId} and b.uid=u.id;
    </select>
  <select id="selectBidByLoanIdPage" resultMap="BaseResultMap2">
    select * from b_bid_info b,u_user u where b.loan_id=#{loanId} and b.uid=u.id limit #{start},#{pageSize}
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update b_bid_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.loanId != null" >
        loan_id = #{record.loanId,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.bidMoney != null" >
        bid_money = #{record.bidMoney,jdbcType=DOUBLE},
      </if>
      <if test="record.bidTime != null" >
        bid_time = #{record.bidTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.bidStatus != null" >
        bid_status = #{record.bidStatus,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update b_bid_info
    set id = #{record.id,jdbcType=INTEGER},
      loan_id = #{record.loanId,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      bid_money = #{record.bidMoney,jdbcType=DOUBLE},
      bid_time = #{record.bidTime,jdbcType=TIMESTAMP},
      bid_status = #{record.bidStatus,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.powernode.p2p.model.BBidInfo" >
    update b_bid_info
    <set >
      <if test="loanId != null" >
        loan_id = #{loanId,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="bidMoney != null" >
        bid_money = #{bidMoney,jdbcType=DOUBLE},
      </if>
      <if test="bidTime != null" >
        bid_time = #{bidTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bidStatus != null" >
        bid_status = #{bidStatus,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.powernode.p2p.model.BBidInfo" >
    update b_bid_info
    set loan_id = #{loanId,jdbcType=INTEGER},
      uid = #{uid,jdbcType=INTEGER},
      bid_money = #{bidMoney,jdbcType=DOUBLE},
      bid_time = #{bidTime,jdbcType=TIMESTAMP},
      bid_status = #{bidStatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>